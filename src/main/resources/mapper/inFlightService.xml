<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.green.airline.repository.interfaces.InFlightServiceRepository">
	<select id="selectInFlightService"
		resultType="com.green.airline.repository.model.InFlightService">
		select * from in_flight_service_tb
	</select>

	<select id="selectInFlightServiceByName"
		resultType="com.green.airline.dto.response.InFlightServiceResponseDto">
		select * from in_flight_service_tb
		where name like
		#{keyword}
	</select>
	
	<select id="selectInFlightMealByName"
		resultType="com.green.airline.dto.response.InFlightMealResponseDto">
		<if test="name=='유아식 및 아동식'">
		select ifm.id as id, ifmd.meal_id, ifm.name as ifm_name, ifmd.name as ifmd_name, ifm.description as ifm_description, ifmd.description as ifmd_description, image
		from in_flight_meal_tb as ifm
		inner join in_flight_meal_detail_tb as ifmd
		on ifm.id = ifmd.meal_id
		where ifm.name=#{name}
		group by ifm.id, ifmd.meal_id, ifm.name, ifmd.name, ifm.description, ifmd.description, image;

		</if>
		<if test="name=='야채식'">
		select ifm.id as id, ifmd.meal_id, ifm.name as ifm_name, ifmd.name as ifmd_name, ifm.description as ifm_description, ifmd.description as ifmd_description, image
		from in_flight_meal_tb as ifm
		inner join in_flight_meal_detail_tb as ifmd
		on ifm.id = ifmd.meal_id
		where ifm.name=#{name}
		group by ifm.id, ifmd.meal_id, ifm.name, ifmd.name, ifm.description, ifmd.description, image;

		</if>
		<if test="name=='식사 조절식'">
		select ifm.id as id, ifmd.meal_id, ifm.name as ifm_name, ifmd.name as ifmd_name, ifm.description as ifm_description, ifmd.description as ifmd_description, image
		from in_flight_meal_tb as ifm
		inner join in_flight_meal_detail_tb as ifmd
		on ifm.id = ifmd.meal_id
		where ifm.name=#{name}
		group by ifm.id, ifmd.meal_id, ifm.name, ifmd.name, ifm.description, ifmd.description, image;
		</if>
		<if test="name=='종교식'">
		select ifm.id as id, ifmd.meal_id, ifm.name as ifm_name, ifmd.name as ifmd_name, ifm.description as ifm_description, ifmd.description as ifmd_description, image
		from in_flight_meal_tb as ifm
		inner join in_flight_meal_detail_tb as ifmd
		on ifm.id = ifmd.meal_id
		where ifm.name=#{name}
		group by ifm.id, ifmd.meal_id, ifm.name, ifmd.name, ifm.description, ifmd.description, image;
		</if>
		<if test="name=='기타 특별식'">
		select ifm.id as id, ifmd.meal_id, ifm.name as ifm_name, ifmd.name as ifmd_name, ifm.description as ifm_description, ifmd.description as ifmd_description, image
		from in_flight_meal_tb as ifm
		inner join in_flight_meal_detail_tb as ifmd
		on ifm.id = ifmd.meal_id
		where ifm.name=#{name}
		group by ifm.id, ifmd.meal_id, ifm.name, ifmd.name, ifm.description, ifmd.description, image;
		</if>
	</select>

	<select id="selectInFlightDetailMeal" resultType="com.green.airline.dto.response.InFlightMealResponseDto">
		select ifm.id as id, ifmd.meal_id, ifm.name as ifm_name, ifmd.name as ifmd_name, ifm.description as ifm_description, ifmd.description as ifmd_description, image
		from in_flight_meal_tb as ifm
		inner join in_flight_meal_detail_tb as ifmd
		on ifm.id = ifmd.meal_id
		group by ifmd.name
	</select>
	
	<select id="selectInFlightMealCategory" resultType="com.green.airline.repository.model.InFlightMeal">
		select *
		from in_flight_meal_tb
	</select>
	
	<select id="selectInFlightMealRequestByUserId" resultType="com.green.airline.dto.response.InFlightMealResponseDto">
		select t.id as ticket_id
		from ticket_tb as t
		inner join schedule_tb as s
		on t.schedule_id=s.id
		where t.member_id=#{memberId} and s.departure_date=#{departureDate}
	</select>
	
	<select id="selectInFlightMealDetailByName" resultType="com.green.airline.repository.model.InFlightMealDetail">
		select *
		from in_flight_meal_detail_tb
		where name=#{name}
	</select>
	
	<insert id="insertInFlightMealRequest">
		insert into request_meal_tb(amount, meal_id, ticket_id)
		values(#{amount}, #{mealDetailId}, #{ticketId})
	</insert>
	
	<select id="selectInFlightScheduleByMemberId" resultType="com.green.airline.dto.response.InFlightMealResponseDto">
		SELECT s.departure_date, r.departure, r.destination, (t.adult_count + t.child_count) as seat_count, t.id as ticket_id, t.seat_grade as seat_grade_name
		FROM ticket_tb AS t
		JOIN (
	      SELECT t.id AS ticket_id, ifnull(SUM(amount), 0) AS amount
	      FROM request_meal_tb AS r
	      RIGHT JOIN ticket_tb AS t
	      ON r.ticket_id = t.id
	      WHERE t.member_id = #{memberId}
	      GROUP BY t.id
	    ) AS ta
		ON ta.ticket_id = t.id
		JOIN schedule_tb as s
		ON t.schedule_id = s.id
		JOIN route_tb as r
		ON r.id = route_id
		WHERE (adult_count + child_count + infant_count) > amount AND departure_date > now();
	</select>
	
	<!-- 수량 조회를 위한 select 문 js에서 memberId와 departureDate 받아와서 동적으로 바꿔줄 거임 -->
	<select id="selectInFlightRequestForSeatCount" resultType="com.green.airline.dto.response.InFlightMealResponseDto">
		select (t.adult_count + t.child_count) as seat_count 
		from ticket_tb as t
		where t.member_id=#{memberId} and t.id = #{ticketId} 
	</select>
	
	<select id="selectAvailableServiceByFlightHours" resultType="com.green.airline.dto.response.InFlightServiceResponseDto">
		select ast.flight_hours, ifs.name, ifs.description, ifs.icon_image, ifs.detail_image
		from available_service_tb as ast
		join in_flight_service_tb as ifs
		on ast.service_id=ifs.id
		where flight_hours=#{flightHours};
	</select>
	
	<select id="selectRequestMealByMemberId" resultType="com.green.airline.dto.response.SpecialMealResponseDto">
		select rm.id as rm_id, rm.amount as rm_amount, t.id as ticket_id, ifm.name as ifm_name, s.departure_date, s. arrival_date, r.departure, r.destination, ifmd.name
		from request_meal_tb as rm
		join in_flight_meal_detail_tb as ifmd
		on rm.meal_id = ifmd.id
		join in_flight_meal_tb as ifm
		on ifmd.meal_id = ifm.id
		join ticket_tb as t
		on rm.ticket_id = t.id
		join member_tb as m
		on t.member_id = m.id
		join schedule_tb as s
		on t.schedule_id = s.id
		join route_tb as r
		on s.route_id = r.id
		where m.id = #{memberId}
		ORDER BY rm.id DESC;
	</select>
	
	<!-- <select id="selectTicketByIdAndTicketId" resultType="com.green.airline.dto.response.InFlightMealResponseDto">
		select s.departure_date, r.departure, r.destination, (t.adult_count + t.child_count) as seat_count, t.id as ticket_id
		from ticket_tb as t
		inner join schedule_tb as s
		on t.schedule_id = s.id
		inner join route_tb as r
		on r.id = route_id
		where t.member_id=#{memberId} and t.id =#{ticketId}
	</select> -->
	
	<delete id="deleteRequestMealById">
		delete from request_meal_tb where id = #{id}
	</delete>
	
	<select id="selectInFlightMealByMealId" resultType="com.green.airline.repository.model.InFlightMealDetail">
		select *
		from in_flight_meal_detail_tb
		where meal_id=#{mealDetail}
	</select>
	
	<select id="selectInFlightMealForManager" resultType="com.green.airline.dto.response.InFlightMealResponseDto">
		select *
		from(
			SELECT @ROWNUM := @ROWNUM + 1 AS ROWNUM, A.* 
		        FROM (
					select rm.id as rm_id, rm.amount as rm_amount, t.id as ticket_id, ifm.name as ifm_name, s.departure_date, s. arrival_date, r.departure, r.destination, t.member_id, ifmd.name as name
					from request_meal_tb as rm
					join in_flight_meal_detail_tb as ifmd
					on rm.meal_id = ifmd.id
					join in_flight_meal_tb as ifm
					on ifmd.meal_id = ifm.id
					join ticket_tb as t
					on rm.ticket_id = t.id
					join member_tb as m
					on t.member_id = m.id
					join schedule_tb as s
					on t.schedule_id = s.id
					join route_tb as r
					on s.route_id = r.id
		            ORDER BY rm.id DESC
		            ) A, 
		        (SELECT @ROWNUM := 0 ) B
		        ) as C
		where C.ROWNUM BETWEEN #{start} AND #{end}
	</select>
	
	<select id="selectInFlightMealCount" resultType="Integer">
		select count(*) from request_meal_tb;
	</select>
	
	<delete id="deleteByTicketId">
		DELETE FROM request_meal_tb WHERE ticket_id = #{ticketId}
	</delete>
	
</mapper>