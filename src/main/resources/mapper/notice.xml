<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.green.airline.repository.interfaces.NoticeRepository">
	<insert id="insertNotice">
		insert into notice_tb (title, content, category_id)
		values('${title}', '${content}', '${categoryId}')
	</insert>
	
	<!-- 총 공지글 개수 세는 기능 -->
	<select id="selectNoticeCount" resultType="int">
		select count(*) from notice_tb
	</select>
	
	<select id="selectNoticeByCategoryIdCount" resultType="int">
		select count(*)
		from notice_tb as n
		inner join notice_category_tb
		as nc
		on nc.id = n.category_id
		where nc.id='${categoryId}'
	</select>
	
	<select id="selectNoticeByKeywordCount" resultType="int">
		select count(*) from notice_tb where title like CONCAT ('%', '${keyword}', '%')
	</select>

	<select id="selectNotice"
		resultType="com.green.airline.dto.response.NoticeResponseDto">
		<!-- 페이징 처리 안된 쿼리문 -->
		<!-- select *, nc.name as name
		from notice_tb as n
		inner join
		notice_category_tb as nc
		on nc.id = n.category_id -->
		
		<!-- 페이징 처리 MySql용 -->
		SELECT * 
		from (
 			SELECT @ROWNUM := @ROWNUM + 1 AS ROWNUM, A.* 
        	FROM (
				select n.title, n.content, nc.name as name, nc.id as ncId, n.id, n.category_id, n.created_at
				from notice_tb as n
				inner join
				notice_category_tb as nc
				on nc.id = n.category_id
        	    ORDER BY n.id DESC
     	       ) A, 
        		(SELECT @ROWNUM := 0 ) B
        	) as C
		WHERE C.ROWNUM BETWEEN '${start}' AND '${end}'
		
	</select>

	<!-- 공지사항 검색 기능 -->
	<select id="selectNoticeByTitle"
		resultType="com.green.airline.dto.response.NoticeResponseDto">
		<!-- select *
		from notice_tb as n
		inner join notice_category_tb as nc
		on nc.id = n.category_id
		where title like '${keyword}' -->
		
		SELECT * 
		from (
 			SELECT @ROWNUM := @ROWNUM + 1 AS ROWNUM, A.* 
        	FROM (
				select 
							nc.name as name, 
	                        nc.id as category_id,
	                        n.id as id,
	                        n.title,
	                        n.content,
	                        n.created_at
						from 
						notice_tb as n
						inner join
						notice_category_tb as nc
		  				on nc.id = n.category_id
		  				where title like CONCAT ('%', '${keyword}', '%') 
        	    		order by n.id desc
     	       ) A, 
        		(SELECT @ROWNUM := 0 ) B
        	) as C
		WHERE C.ROWNUM BETWEEN '${obj.start}' AND '${obj.end}'
		
	</select>

	<!-- id 기반 상세 페이지 이동 기능 -->
	<select id="selectNoticeById"
		resultType="com.green.airline.dto.response.NoticeResponseDto">
		select n.title, n.content, n.created_at, n.category_id, nc.name, n.id, nc.id as ncId, n.category_id
		from notice_tb as n
		inner join notice_category_tb as nc
		on nc.id = n.category_id
		where n.id='${id}'
	</select>

	<select id="selectNoticeByCategoryId"
		resultType="com.green.airline.dto.response.NoticeResponseDto">
		<if test="categoryId==1">
			<!-- select *
			from notice_tb as n
			inner join notice_category_tb
			as nc
			on nc.id = n.category_id -->
			
			SELECT * 
		from (
 			SELECT @ROWNUM := @ROWNUM + 1 AS ROWNUM, A.* 
        	FROM (
				select 
							nc.name as name, 
	                        n.title,
	                        n.content,
	                        n.created_at,
	                        nc.id as ncId, n.id, n.category_id
						from 
						notice_tb as n
						inner join
						notice_category_tb as nc
		  				on nc.id = n.category_id
        	    		order by n.id desc
     	       ) A, 
        		(SELECT @ROWNUM := 0 ) B
        	) as C
		WHERE C.ROWNUM BETWEEN '${obj.start}' AND '${obj.end}'
			
		</if>

		<if test="categoryId!=1">
			<!-- select *
			from notice_tb as n
			inner join notice_category_tb
			as nc
			on nc.id = n.category_id
			where nc.id='${categoryId}' -->
			
			SELECT * 
		from (
 			SELECT @ROWNUM := @ROWNUM + 1 AS ROWNUM, A.* 
        	FROM (
				select 
							nc.name as name, 
	                        n.title,
	                        n.content,
	                        n.created_at, nc.id as ncId, n.id, n.category_id
						from notice_tb as n
						inner join notice_category_tb
						as nc
						on nc.id = n.category_id
						where nc.id='${categoryId}'
        	    		order by n.id desc
     	       ) A, 
        		(SELECT @ROWNUM := 0 ) B
        	) as C
		WHERE C.ROWNUM BETWEEN '${obj.start}' AND '${obj.end}'
			
		</if>
	</select>
	
	<delete id="deleteNoticeById">
		delete from notice_tb
		where id = '${id}'
	</delete>

	<update id="updateNoticeById">
		update notice_tb
		set title = '${title}', content = '${content}', category_id = '${categoryId}'
		where id = '${id}'
	</update>
	
	<select id="selectNoticeCategory" resultType="com.green.airline.repository.model.NoticeCategory">
		select *
		from notice_category_tb
	</select>
	
	<select id="selectOrderByIdDescLimitN" resultType="com.green.airline.dto.response.NoticeResponseDto">
		select n.title, n.content, n.created_at, n.category_id, nc.name, n.id
		from notice_tb as n
		inner join notice_category_tb as nc
		on nc.id = n.category_id
		ORDER BY id DESC
		LIMIT ${limitCount}  # 이부분은 '' 빼기 (int로 들어가야 되기 때문)
	</select>

</mapper>
